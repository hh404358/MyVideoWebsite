{"remainingRequest":"D:\\Download\\hahaha-vue-admin\\hahaha-vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Download\\hahaha-vue-admin\\hahaha-vue-admin\\src\\views\\system\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Download\\hahaha-vue-admin\\hahaha-vue-admin\\src\\views\\system\\role\\index.vue","mtime":1710555747697},{"path":"D:\\Download\\hahaha-vue-admin\\hahaha-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Download\\hahaha-vue-admin\\hahaha-vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Download\\hahaha-vue-admin\\hahaha-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Download\\hahaha-vue-admin\\hahaha-vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views/system/role","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-form ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\">\r\n      <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n        <el-input\r\n          v-model=\"queryParams.roleName\"\r\n          placeholder=\"请输入角色名称\"\r\n          clearable\r\n          size=\"small\"\r\n          style=\"width: 240px\"\r\n          @keyup.enter.native=\"handleQuery\"\r\n        />\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"状态\" prop=\"status\">\r\n        <el-select\r\n          v-model=\"queryParams.status\"\r\n          placeholder=\"角色状态\"\r\n          clearable\r\n          size=\"small\"\r\n          style=\"width: 240px\"\r\n        >\r\n          <el-option :key=\"0\" label=\"正常\" :value=\"0\" />\r\n          <el-option :key=\"1\" label=\"停用\" :value=\"1\" />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button\r\n          type=\"primary\"\r\n          icon=\"el-icon-search\"\r\n          size=\"mini\"\r\n          @click=\"handleQuery\"\r\n        >搜索</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"primary\"\r\n          plain\r\n          icon=\"el-icon-plus\"\r\n          size=\"mini\"\r\n          @click=\"handleAdd\"\r\n        >新增</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"danger\"\r\n          plain\r\n          icon=\"el-icon-delete\"\r\n          size=\"mini\"\r\n          :disabled=\"multiple\"\r\n          @click=\"handleDelete\"\r\n        >删除</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"roleList\"\r\n      @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n      <el-table-column label=\"角色编号\" prop=\"id\" width=\"120\" />\r\n      <el-table-column\r\n        label=\"角色名称\"\r\n        prop=\"roleName\"\r\n        :show-overflow-tooltip=\"true\"\r\n        width=\"150\"\r\n      />\r\n      <el-table-column\r\n        label=\"权限字符\"\r\n        prop=\"roleKey\"\r\n        :show-overflow-tooltip=\"true\"\r\n        width=\"150\"\r\n      />\r\n      <el-table-column label=\"显示顺序\" prop=\"roleSort\" width=\"100\" />\r\n      <el-table-column label=\"状态\" align=\"center\" width=\"100\">\r\n        <template slot-scope=\"scope\">\r\n          <el-switch\r\n            v-model=\"scope.row.status\"\r\n            active-value=\"0\"\r\n            inactive-value=\"1\"\r\n            @change=\"handleStatusChange(scope.row)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"创建时间\"\r\n        align=\"center\"\r\n        prop=\"createTime\"\r\n        width=\"180\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ parseTime(scope.row.createTime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"操作\"\r\n        align=\"center\"\r\n        class-name=\"small-padding fixed-width\"\r\n      >\r\n        <template v-if=\"scope.row.id !== 1\" slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"handleUpdate(scope.row)\"\r\n          >修改</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            icon=\"el-icon-delete\"\r\n            @click=\"handleDelete(scope.row)\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n      :page-size.sync=\"queryParams.pageSize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\"\r\n      :page-sizes=\"[10, 20, 30, 40]\"\r\n      :current-page.sync=\"queryParams.pageNum\"\r\n      @current-change=\"getList\"\r\n      @size-change=\"getList\"\r\n    />\r\n\r\n    <!-- 添加或修改角色配置对话框 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input v-model=\"form.roleName\" placeholder=\"请输入角色名称\" />\r\n        </el-form-item>\r\n        <el-form-item prop=\"roleKey\">\r\n          <span slot=\"label\">\r\n            <el-tooltip\r\n              content=\"控制器中定义的权限字符，如：@PreAuthorize(`@ss.hasRole('admin')`)\"\r\n              placement=\"top\"\r\n            >\r\n              <i class=\"el-icon-question\" />\r\n            </el-tooltip>\r\n            权限字符\r\n          </span>\r\n          <el-input v-model=\"form.roleKey\" placeholder=\"请输入权限字符\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色顺序\" prop=\"roleSort\">\r\n          <el-input-number\r\n            v-model=\"form.roleSort\"\r\n            controls-position=\"right\"\r\n            :min=\"0\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-radio-group v-model=\"form.status\">\r\n            <el-radio :key=\"'0'\" :label=\"'0'\">正常</el-radio>\r\n            <el-radio :key=\"'1'\" :label=\"'1'\">停用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"菜单权限\">\r\n          <el-checkbox\r\n            v-model=\"menuExpand\"\r\n            @change=\"handleCheckedTreeExpand($event)\"\r\n          >展开/折叠</el-checkbox>\r\n          <el-checkbox\r\n            v-model=\"menuNodeAll\"\r\n            @change=\"handleCheckedTreeNodeAll($event)\"\r\n          >全选/全不选</el-checkbox>\r\n          <el-tree\r\n            ref=\"menu\"\r\n            class=\"tree-border\"\r\n            :data=\"menuOptions\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :check-strictly=\"false\"\r\n            empty-text=\"加载中，请稍候\"\r\n            :props=\"defaultProps\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\">\r\n          <el-input\r\n            v-model=\"form.remark\"\r\n            type=\"textarea\"\r\n            placeholder=\"请输入内容\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  listRole,\r\n  getRole,\r\n  delRole,\r\n  addRole,\r\n  updateRole,\r\n  changeRoleStatus\r\n} from '@/api/system/role'\r\nimport { treeselect as menuTreeselect, roleMenuTreeselect } from '@/api/menu'\r\n\r\nexport default {\r\n  name: 'Role',\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 角色表格数据\r\n      roleList: [],\r\n      // 弹出层标题\r\n      title: '',\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 菜单列表\r\n      menuOptions: [],\r\n      menuExpand: false,\r\n      menuNodeAll: false,\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        roleName: undefined,\r\n        roleKey: undefined,\r\n        status: undefined\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n      // 表单校验\r\n      rules: {\r\n        roleName: [\r\n          { required: true, message: '角色名称不能为空', trigger: 'blur' }\r\n        ],\r\n        roleKey: [\r\n          { required: true, message: '权限字符不能为空', trigger: 'blur' }\r\n        ],\r\n        roleSort: [\r\n          { required: true, message: '角色顺序不能为空', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    /** 查询角色列表 */\r\n    getList() {\r\n      this.loading = true\r\n      listRole(this.queryParams).then((response) => {\r\n        this.roleList = response.rows\r\n        this.total = response.total\r\n        this.loading = false\r\n      })\r\n    },\r\n    /** 查询菜单树结构 */\r\n    getMenuTreeselect() {\r\n      menuTreeselect().then((response) => {\r\n        this.menuOptions = response\r\n      })\r\n    },\r\n    // 所有菜单节点数据\r\n    getMenuAllCheckedKeys() {\r\n      // 目前被选中的菜单节点\r\n      const checkedKeys = this.$refs.menu.getCheckedKeys()\r\n      // 半选中的菜单节点\r\n      const halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys()\r\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys)\r\n      return checkedKeys\r\n    },\r\n    /** 根据角色ID查询菜单树结构 */\r\n    getRoleMenuTreeselect(id) {\r\n      return roleMenuTreeselect(id).then((response) => {\r\n        this.menuOptions = response.menus\r\n        return response\r\n      })\r\n    },\r\n    // 角色状态修改\r\n    handleStatusChange(row) {\r\n      const text = row.status === '0' ? '启用' : '停用'\r\n      this.$modal\r\n        .confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗？')\r\n        .then(function() {\r\n          return changeRoleStatus(row.id, row.status)\r\n        })\r\n        .then(() => {\r\n          this.$modal.msgSuccess(text + '成功')\r\n        })\r\n        .catch(function() {\r\n          row.status = row.status === '0' ? '1' : '0'\r\n        })\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false\r\n      this.reset()\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      if (this.$refs.menu !== undefined) {\r\n        this.$refs.menu.setCheckedKeys([])\r\n      }\r\n\r\n      // eslint-disable-next-line no-sequences\r\n      (this.menuNodeAll = false),\r\n      (this.menuExpand = false),\r\n      (this.form = {\r\n        id: undefined,\r\n        roleName: undefined,\r\n        roleKey: undefined,\r\n        roleSort: 0,\r\n        status: '0',\r\n        menuIds: [],\r\n        remark: undefined\r\n      })\r\n      this.resetForm('form')\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1\r\n      this.getList()\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.resetForm('queryForm')\r\n      this.handleQuery()\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map((item) => item.id)\r\n      this.single = selection.length !== 1\r\n      this.multiple = !selection.length\r\n    },\r\n    // 树权限（展开/折叠）\r\n    handleCheckedTreeExpand(value) {\r\n      const treeList = this.menuOptions\r\n      for (let i = 0; i < treeList.length; i++) {\r\n        this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value\r\n      }\r\n    },\r\n    // 树权限（全选/全不选）\r\n    handleCheckedTreeNodeAll(value) {\r\n      this.$refs.menu.setCheckedNodes(value ? this.menuOptions : [])\r\n    },\r\n\r\n    /** 新增按钮操作 */\r\n    handleAdd() {\r\n      this.reset()\r\n      this.getMenuTreeselect()\r\n      this.open = true\r\n      this.title = '添加角色'\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset()\r\n      const id = row.id || this.ids\r\n      const roleMenu = this.getRoleMenuTreeselect(id)\r\n      getRole(id).then((response) => {\r\n        this.form = response\r\n        this.open = true\r\n        this.$nextTick(() => {\r\n          roleMenu.then((res) => {\r\n            const checkedKeys = res.checkedKeys\r\n            checkedKeys.forEach((v) => {\r\n              this.$nextTick(() => {\r\n                this.$refs.menu.setChecked(v, true, false)\r\n              })\r\n            })\r\n          })\r\n        })\r\n        this.title = '修改角色'\r\n      })\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm: function() {\r\n      this.$refs['form'].validate((valid) => {\r\n        if (valid) {\r\n          if (this.form.id !== undefined) {\r\n            this.form.menuIds = this.getMenuAllCheckedKeys()\r\n            updateRole(this.form).then((response) => {\r\n              this.$modal.msgSuccess('修改成功')\r\n              this.open = false\r\n              this.getList()\r\n            })\r\n          } else {\r\n            this.form.menuIds = this.getMenuAllCheckedKeys()\r\n            addRole(this.form).then((response) => {\r\n              this.$modal.msgSuccess('新增成功')\r\n              this.open = false\r\n              this.getList()\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const ids = row.id || this.ids\r\n      this.$modal\r\n        .confirm('是否确认删除角色编号为\"' + ids + '\"的数据项？')\r\n        .then(function() {\r\n          return delRole(ids)\r\n        })\r\n        .then(() => {\r\n          this.getList()\r\n          this.$modal.msgSuccess('删除成功')\r\n        })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}